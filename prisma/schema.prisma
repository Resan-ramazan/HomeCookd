datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum DeliveryDay {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password      String
  notes         Note[]
  subscriptions Subscription[]
}

model Cook {
  id       String @id @default(cuid())
  name     String
  email    String @unique
  password String
  username String @unique

  recipes Recipe[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  meals            Meal[]
  SubscriptionMeal SubscriptionMeal[]
}

model Meal {
  id    String @id @default(cuid())
  title String
  price Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cook   Cook   @relation(fields: [cookId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  cookId String

  subscriptionMeals SubscriptionMeal[]
}

model Subscription {
  id    String   @id @default(cuid())
  title String
  price Int
  start DateTime @default(now())
  end   DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String

  subscriptionMeals SubscriptionMeal[]
}

model SubscriptionMeal {
  id       String @id @default(cuid())
  price    Int
  quantity Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  deliveryDay  DeliveryDay
  deliveryHour String

  subscription   Subscription @relation(fields: [subscriptionId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  subscriptionId String

  meal   Meal   @relation(fields: [mealId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  mealId String

  cook   Cook   @relation(fields: [cookId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  cookId String
}

model Note {
  id    String @id @default(cuid())
  title String
  body  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
}

model Recipe {
  id    String @id @default(cuid())
  title String
  body  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cook   Cook   @relation(fields: [cookId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  cookId String
}